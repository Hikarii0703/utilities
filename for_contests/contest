#!/usr/bin/python3
class colo:
    HEADER = '\033[95m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    UNDERLINE = '\033[4m'
    RED='\033[1;31m'
    GREEN='\033[1;32m'
    CYAN='\033[1;36m'
    NC='\033[0m'
    BOLD='\033[1;37m'
    YELLOW='\033[1;33m'

import os
import sys

if len(sys.argv) == 1:
    print(colo.RED + "Argument missing." + colo.NC)
    exit(0)

filename = sys.argv[1]
purefilename = ''

if filename.endswith('.cpp'):
    purefilename = filename[:-4].upper()
else:
    purefilename = filename.upper()
    filename = filename + '.cpp'

print("%s[TASK: %s]%s" % (colo.CYAN, filename, colo.NC))

try:
    if len(sys.argv) == 2:
        print("%s[COMPILING IN %sC++17%s]%s" % (colo.RED, colo.YELLOW, colo.RED, colo.NC))
        os.system('g++ -o %s.exe %s -O2 -std=c++17 -Wall -Wextra -Wshadow -Wformat=2 -Wfloat-equal -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -Wcast-qual -Wcast-align -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -fstack-protector -DLOCAL'
                % (purefilename, filename)
        )
    else:
        version = sys.argv[2]
        print("%s[COMPILING IN %sC++%s%s]%s" % (colo.RED, colo.YELLOW, version, colo.RED, colo.NC))
        os.system('g++ -o %s.exe %s -O2 -std=c++%s -Wall -Wextra -Wshadow -Wformat=2 -Wfloat-equal -Wlogical-op -Wshift-overflow=2 -Wduplicated-cond -Wcast-qual -Wcast-align -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC -D_FORTIFY_SOURCE=2 -fsanitize=address -fsanitize=undefined -fno-sanitize-recover -fstack-protector -DLOCAL'
                % (purefilename, filename, version)
        )
except:
    exit(0)

print("%s[FINISHED]%s" % (colo.GREEN, colo.NC))